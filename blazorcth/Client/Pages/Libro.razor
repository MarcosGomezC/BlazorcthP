@page "/Libros"
@using BlazorCTH.Shared
@using BlazorCTH.Shared.DTOS
@using global::Shared.DTOS
@inject HttpClient Http

@* <PageTitle>Libros</PageTitle>

<h1>Libros</h1>

<p>Esto es una Biblioteca.</p>

@if (libros == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Id Autor</th>
                <th>Nombre</th>


            </tr>
        </thead>
        <tbody>
            @foreach (var libros in libros)
            {
                <tr>
                    <td>@libros.Nombre</td>
                    <td>@libros.IdAutor</td>
                    <td>@libros.NombreAutor</td>

                </tr>
            }
            
        </tbody>
    </table>
} *@
@* <MudTable Items="@libros" Hover="true" Breakpoint="Breakpoint.Sm">
    <HeaderContent>
        <MudTh>Nombre</MudTh>
        <MudTh>Nombre Del Autor</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Nombre">@context.Nombre</MudTd>
        <MudTd DataLabel="NombreAutor">@context.NombreAutor</MudTd>
        
       

    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[] { 10, 25, 50, 100 }" />
    </PagerContent>
</MudTable> *@
<MudGrid Justify="Justify.FlexStart" Spacing="4">
    @foreach (var libro in libros)
    {
        <MudItem Style="flex: 0 0 16.6%; max-width: 16.6%;">
            <MudCard Class="rounded-md" Style="height: 450px; width: 100%;">
                <MudCardHeader>
                    <CardHeaderAvatar>
                        <MudAvatar Color="Color.Secondary">I</MudAvatar>
                    </CardHeaderAvatar>
                    <CardHeaderContent>
                        <MudText Typo="Typo.body1">@libro.Nombre</MudText>
                        <MudText Typo="Typo.body2">@libro.NombreAutor</MudText>
                    </CardHeaderContent>
                </MudCardHeader>

                <MudCardMedia Image="@libro.UrlPortada"
                              Style="width:100%; height:320px; object-fit:cover" />

                <MudCardActions>
                    <MudIconButton Icon="@Icons.Material.Filled.Favorite" />
                    <MudIconButton Icon="@Icons.Material.Filled.Share" />
                </MudCardActions>
            </MudCard>
        </MudItem>
    }
</MudGrid>
@code {

    public List<Libro_DTO> libros = new List<Libro_DTO>();
    public List<Autor_DTO> autor = new List<Autor_DTO>();

    protected override async Task OnInitializedAsync()
    {
        libros = await Http.GetFromJsonAsync<List<Libro_DTO>>("api/libro/GetLibros");
        await GetAutores();

    }
    public async Task GetAutores()
    {
        autor = await Http.GetFromJsonAsync<List<Autor_DTO>>("api/autor/GetAutores");
    }
}